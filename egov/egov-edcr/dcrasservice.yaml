openapi: 3.0.0
info:
  version: 1.0.0
  title: eDCR as service
  description: Service to scrutinize plan in dxf file format and generate report. Use the transaction number to track the status/retrieve saved information.
  contact:
    name: Egovernments Foundation
    email: contact@egovernments.org
servers:
  - url: https://egov-dcr-galaxy.egovernments.org/edcr
    description: Development server
    
paths:
  /rest/dcr/scrutinizeplan:
    post:
      summary: This API will scrutinize the building plan drawing(dxf) file send along and gives the plan scrutiny result as response along with a unique eDCR number on successful processing.
      requestBody:
        content:
          multipart/mixed:
            schema:
              $ref: '#/components/schemas/ScrutinizePlanReq'
            encoding:
              dxfFile:
                contentType: application/dxf
      responses:
        '200':
          description: Plan scrutanized successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScrutinizePlanResponse'
        '400':
          description: Invalid Input
          content:
            application/json:
              schema:
                $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'
      tags:
        - Scrutinize Plan
        
  /rest/dcr/scrutinydetails:
    post:
      summary:  This API is used to fetch the details of the plan that is already scrutinized in the system by providing a transaction number or a eDCR number.
      requestBody:
        description: Send the unique transaction number that was used for plan scrutiny or the system generated eDCR number that was received as part of the scrutiny response for getting the details of scrutiny.
        content:
          application/json:
            schema:
              $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/RequestInfo'
      parameters:
        - name: tenantId
          in: query
          description: Unique identifier of the city/state for which the record belong to.
          required: true
          schema:
            type: string
        - name: edcrNumber
          in: query
          description: edcr Number that was generated by the system as part of plan scrutiny.
          required: false
          schema:
            type: string
        - name: transactionNumber
          in: query
          description: Transaction Number number that was orignially sent to the system along with the drawing for scrutiny.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successfully list the details of the plan scrutiny if the system can identify the plan as per the details send. In case where system does not find the scrutiny details based on the input send, it will send a message back as "Invalid Input- Record not found".
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ScrutinizePlanResponse'
      tags:
        - Search Scrutiny Details
        
  /rest/dcr/extractplan:
    post:
      summary: This API will extract the dcr data.
      requestBody:
        content:
          multipart/mixed:
            schema:
              $ref: '#/components/schemas/ExtractPlanReq'
            encoding:
              dxfFile:
                contentType: application/dxf
      responses:
        '200':
          description: Plan extracted successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtractPlanResponse'
        '400':
          description: Invalid Input
          content:
            application/json:
              schema:
                $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'
      tags:
        - Extract Plan
        
components:
  schemas:
    EdcrDetail:
      type: object
      description: EncrReqObject contains data to be encrypted and meta-data required to perform the encryption.
      properties:
        transactionNumber:
          type: string
          maxLength: 32
          description: Unique Transaction Number for each request.
        planDetail:
          $ref: '#/components/schemas/planDetail'
        edcrNumber:
          type: string
          maxLength: 32
          description: If the plan is approved, eDCR number will be generated by the system.
        planPdfs:
          type: array
          items:
            type: string
            format: url 
            description: System generated pdfs of the drawings(dxf) uploaded.
        dxfFile:
          type: string
          format: url
          description: Plan drawing file that is scrutinized which is of .dxf extension.
          maximum: 23333
        updatedDxfFile:
          type: string
          format: url
          description: System upgraded version of the uploaded dxf file.
          maximum: 23333
        planReport:
          type: string
          format: url
          description: System generated scrutiny report for the uploaded drawing(dxf). This will be a pdf file 
        status:
          type: string
          description: Status of the plan after the scrutiny process. If all the rules are passed the status will be "Accepted". If one of the rules is failed the status will be "Not Accepted".If there is issue in reading drawing or drawing not defined in standard format, then status will be "Aborted"
          enum:
            - Accepted
            - Not Accepted
            - Aborted
        tenantId:
          $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/parameters/tenantId'

    ScrutinizePlanReq:
      type: object
      description: This object contains data to be submitted for scrutanizing a plan drawing.
      properties:
        tenantId:
          $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/parameters/tenantId'
        applicantName:
          type: string
        transactionNumber:
          type: string
          maxLength: 32
          description: Unique Transaction Number for each request.
        requestInfo:
          $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/RequestInfo'
        dxfFile:
          type: string
          x-mimetype: application/dxf
          description: The builing plan drawing file, in .dxf format, which needs to be scrutinized.
      example:
        tenantId: sonpur
        transactionNumber: '1'
        requestInfo: {}
        dxfFile: ''
      required:
        - tenantId
        - transactionNumber
        - dxfFile
        
    ScrutinizePlanResponse:
      description: This object contains the response of a file scrutiny along with all the reports and status. 
      properties:
        responseInfo:
          $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ResponseInfo'
        edcrDetail:
          description: Used for search result and create only
          type: array
          items:
            $ref: '#/components/schemas/EdcrDetail'
            
    planInformation:
      type: object
      description: Planinformation captures the declarations of the plan.Plan information captures the boundary, building location details,surrounding building NOC's etc. User will assert the details about the plot. The same will be used to print in plan report.
      properties:
        ownerName:
          type: string
          maxLength: 32
          description: Temporary field used to capture Owner Name
        plotArea:
          type: number
          description: Plot area defined in PLAN_INFO layer. Using the same to measure coverage and small plot condition.This is the declared plot area in the plan.
        occupancy:
          type: string
          maxLength: 32
          description: Temporary field used to auto populate occupancy detail
        serviceType:
          type: string
          maxLength: 32
          description: Temporary field used for service type.
        amenities: 
          type: string
          maxLength: 32
          description: Temporary field used to show amenities used in application.
        architectInformation: 
          type: string
          maxLength: 32
          description: Save architect who submitted application mentioned in plan info.
        applicantName:  
          type: string
          maxLength: 32
          description: Applicant Name
        crzZoneArea:  
          type: boolean
          description: Extracted from Plan info. Whether plot present in CRZ zone. Expecting default value as NO. 
        demolitionArea:
          type: number
          description: Extracted from Plan info. Demolition area to be mentioned in the plan info
        depthCutting:
          type: string
          maxLength: 3
          description: YES/NO/NA. Extracted from Plan info. Depth cutting more than 1.5 Meter flag. 
        governmentOrAidedSchool:
          type: string
          maxLength: 3
          description:  YES/NO/NA.Extracted from Plan info. Is building of type government or aided school.
        securityZone:
          type: string
          maxLength: 3
          description: YES/NO/NA.Extracted from Plan info. Is plot comes under security zone flag.
        accessWidth:
          type: number
          description: Extracted from Plan info.  Access width to the plot.
        noOfBeds:
          type: number
          description: Extracted from Plan info.  In case of medical occupancy, capture number of beds present in the building. Sanitation details are decided based on number of beds present.
        nocToAbutSideDesc:
          type: string
          maxLength: 3
          description: YES/NO/NA.Extracted from Plan info. NOC received from the side owner
        nocToAbutRearDesc:
          type: string
          maxLength: 3
          description: YES/NO/NA.Extracted from Plan info. NOC received from the rear owner.
        openingOnSide:
          type: string
          maxLength: 3
          description: YES/NO/NA.Extracted from Plan info. Any opening on sides of building.
        openingOnRear:
          type: string
          maxLength: 3
          description: YES/NO/NA.Extracted from Plan info. Any opening on rear side of building.
        noOfSeats:
          type: number
          description: Extracted from Plan info. Number of seats present in special occupancy 
        noOfMechanicalParking:
          type: number
          description: Extracted from Plan info. Number of mechanical parking declared in the plan
        singleFamilyBuilding:
          type: string
          maxLength: 3
          description: YES/NO/NA.Extracted from Plan info.Is plan belongs to single family building. There are few rules relaxed for single family building 
        reSurveyNo:
          type: string
          maxLength: 32
          description: Extracted from Plan info. Revenue survey number declared in the plan
        revenueWard:
          type: string
          maxLength: 32
          description: Extracted from Plan info. Revenue ward name declared in the plan
        desam:
          type: string
          maxLength: 32
          description: Extracted from Plan info. Desam name declared in the plan
        village:
          type: string
          maxLength: 32
          description: Extracted from Plan info. Village name declared in the plan
        landUseZone:
          type: string
          maxLength: 32
          description: Extracted from Plan info. Land Use zone. The value should be standard like RESIDENTIAL,COMMERCIAL,INDUSTRIAL,PUBLICANDSEMIPUBLIC etc.
        leaseHoldLand:
          type: string
          maxLength: 32
          description: YES/NO/NA. Extracted from Plan info. Is lease hold land
        roadWidth:
          type: number
          description: Extracted from Plan info. Road width declared in the plan.
        roadLength:
          type: number
          description: Extracted from Plan info. Road length declared in the plan.
        typeOfArea:
          type: string
          maxLength: 32
          description: Extracted from Plan info. Type of area. Whether old or new area.
        depthOfPlot:
          type: number
          description: Extracted from Plan info. Average plot depth.
        widthOfPlot:
          type: number
          description: Extracted from Plan info. Average plot width
        buildingNearMonument:
          type: string
          maxLength: 3
          description: YES/NO/NA. Extracted from Plan info. Is building near to monument.
        buildingNearGovtBuilding:
          type: string
          maxLength: 3 
          description: YES/NO/NA.Extracted from Plan info. Is building near to government building
        nocNearMonument: 
          type: string
          maxLength: 3
          description: YES/NO/NA.Extracted from Plan info. Building near monument and permitted with NOC
        nocNearAirport:
          type: string
          maxLength: 3
          description: YES/NO/NA.Extracted from Plan info. Building near airport and permitted with airport authority
        nocNearDefenceAerodomes:
          type: string
          maxLength: 3
          description: YES/NO/NA.Extracted from Plan info. Building near defence aerodrome and permitted with NOC
        nocStateEnvImpact:
          type: string
          maxLength: 3
          description: YES/NO/NA.Extracted from Plan info. Permitted with state Environmental impact assessment study report
        nocRailways:
          type: string
          maxLength: 3
          description: YES/NO/NA.Extracted from Plan info. Permitted with railway NOC
        nocCollectorGvtLand:
          type: string
          maxLength: 3
          description: YES/NO/NA.Extracted from Plan info. Permitted with noc issued by collector on govt. land
        nocIrrigationDept:
          type: string
          maxLength: 3
          description: YES/NO/NA.Extracted from Plan info. Permitted with irrigation report NOC
        nocFireDept:
          type: string
          maxLength: 3
          description: YES/NO/NA.Extracted from Plan info. Permitted with fire department NOC
        buildingNearToRiver:
          type: string
          maxLength: 3
          description: YES/NO/NA.Extracted from Plan info. Building near the river flag
        barrierFreeAccessForPhyChlngdPpl:
          type: string
          maxLength: 3
          description: YES/NO/NA.Extracted from Plan info. Barrier free access for physically handicapped person provided.
        provisionsForGreenBuildingsAndSustainability:
          type: string
          maxLength: 3
          description: YES/NO/NA.Extracted from Plan info. Provision for green building and sustainability provided in plan.Rainwater harvesting,solar,segregation of waste etc.
        fireProtectionAndFireSafetyRequirements:
          type: string
          maxLength: 3
          description: YES/NO/NA.Extracted from Plan info. Fire Protection And Fire Safety Requirements declared in the plan.
        plotNo:
          type: string
          maxLength: 32
          description: Extracted from Plan info.Plot number
        khataNo:
          type: string
          maxLength: 32
          description: Extracted from Plan info.Khata number.
        mauza:
          type: string
          maxLength: 32
          description: Extracted from Plan info.Mauza number.
        district:
          type: string
          maxLength: 32
          description: Extracted from Plan info.District name
        rwhDeclared:
          type: string
          maxLength: 3
          description: YES/NO/NA.Extracted from Plan info. Rain water declared in plan
    plot: 
      type: object
      description: Plot and Set back details.
    virtualBuilding: 
      type: object
      description: Temporary building object used to validate rules based on overall plot/buildings details. Example Total buildup area of all the blocks, Unique occupancies present in this plot etc.      
    accessoryBlock: 
      type: object
      description: Records Accessory building details. Building has outdoor structures such as attached or detached garages, sheds, storage building etc.This will not consider as another block.  
    block: 
      type: object
      description: Single plan contain multiple block/building information. Records Existing and proposed block information.  
    electricLine: 
      type: object
      description: Electric lines which are passed through plot
    nonNotifiedRoad:  
      type: object
      description: Non notified road like municipal road etc which are present next to plot
    notifiedRoad:  
      type: object
      description: Notified road like highway road etc which are present next to plot
    culdeSacRoad:  
      type: object
      description: Irregular shape roads which are present next to plot
    laneRoad:  
      type: object
      description: Lane road which are present next to plot
    parkingDetails:  
      type: object
      description: Parking facilities provided in the plot. Includes visitor, two wheeler, four wheeler etc
    occupancy:  
      type: object
      description: List of occupancies present in the plot inclusive of all the blocks.
    utility:  
      type: object
      description: Utilities of building like solar,waste disposal plant, watertank, rain water harvesting etc
    farDetails:  
      type: object
      description: Calculated Permissible FSI and provided FSI details
    drawingPreference:  
      type: object
      description: Drawing standard parameters required to process dxf file    
    septicTank:  
      type: object
      description: List of Septic tanks defined in the plan
    plantation:  
      type: object
      description: Trees and plant defined in the plan
    guardRoom:  
      type: object
      description: Guard room details
    segregatedToilet:  
      type: object
      description: Segregated toilet facilities for visitors in Public Buildings (within the premises of the building, but outside the building block)      
    distanceToExternalEntity:  
      type: object
      description: Distance of plot with external entities like rive, lake, monuments, government building etc are grouped    
    measurement:  
      type: object
      description: Common object used to capture length,width,height,mean etc
    reportOutput:  
      type: object
      description: The report output object. Based on type of building and occupancies,the rules are validated and rules which are considered for the submitted plan are recorded in this object             
    
    planDetail:
      type: object
      description: All the details extracted from the plan are referred in this object
      properties:
        edcrPassed:
          type: boolean
          description: Plan scrutiny report status. Values true mean "Accepted" and False mean "Not Accepted". Default value false. On plan scrutiny, if all the rules are success then value is true. 
        applicationDate:
          type: integer
          format: int64
          x-displayformat: 'dd/MM/yyyy'
          description: Submission date of plan scrutiny
        planInformation:
          $ref: '#/components/schemas/planInformation'  
        plot:
          $ref: '#/components/schemas/plot'    
        block:
          type:  array
          items:
            $ref: '#/components/schemas/block'  
        accessoryBlocks:
          type:  array
          items:
            $ref: '#/components/schemas/accessoryBlock'    
        virtualBuilding:   
          $ref: '#/components/schemas/virtualBuilding'    
        electricLine:
          type:  array
          items:
            $ref: '#/components/schemas/electricLine'   
        nonNotifiedRoads:
          type:  array
          items:
            $ref: '#/components/schemas/nonNotifiedRoad'   
        notifiedRoads:
          type:  array
          items:
            $ref: '#/components/schemas/notifiedRoad' 
        culdeSacRoads:
          type:  array
          items:
            $ref: '#/components/schemas/culdeSacRoad' 
        laneRoads:
          type:  array
          items:
            $ref: '#/components/schemas/laneRoad'     
        travelDistancesToExit:
          type:  array
          items:
            type: number
          description: Travel distance to exit from the buildings
        parkingDetails:  
          type:  array
          items:
            $ref: '#/components/schemas/parkingDetails' 
        canopyDistanceFromPlotBoundary:
          type:  array
          items:
            type: number
          description: If canopy present, capture distance from the plot boundary  to canopy.   
        occupancies:
          type:  array
          items:
            $ref: '#/components/schemas/occupancy'  
        utility:
          $ref: '#/components/schemas/utility'   
        coverage:
          type: number
          format: BigDecimal
          description: coverage Overall Coverage of all the block. Total area of all the floor/plot area.
        farDetails:
          $ref: '#/components/schemas/farDetails'   
        drawingPreference:
          $ref: '#/components/schemas/drawingPreference'     
        septicTank:
          type:  array
          items:
            $ref: '#/components/schemas/septicTank'    
        plantation:
          $ref: '#/components/schemas/plantation'   
        guardRoom:
          $ref: '#/components/schemas/guardRoom'             
        segregatedToilet:
          $ref: '#/components/schemas/segregatedToilet'  
        surrenderRoads:
          type:  array
          items:
            $ref: '#/components/schemas/measurement'  
          description: surrendered roads with width detail
        totalSurrenderRoadArea:
          type: number
          format: BigDecimal
          description: For proposed road widening, surrendered road area.This area will be used to calculate FAR,setback and permissible buildup area  
        distanceToExternalEntity:
          $ref: '#/components/schemas/distanceToExternalEntity'            
        errors:
          type: array
          items:
            type: array
            items:
              type: string
          description: Used to show drawing mistakes, General errors, mistakes in following layer/color coding standard etc        
        reportOutput:
          $ref: '#/components/schemas/reportOutput'           
        noObjectionCertificates:
          type: array
          items:
            type: array
            items:
              type: string
          description: System will evaluate the list of noc's required based on the plan input
          
    ExtractPlanReq:
      type: object
      description: This object contains data to be submitted for extracting a plan drawing.
      properties:
        tenantId:
          $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/parameters/tenantId'
        applicantName:
          type: string
        requestInfo:
          $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/RequestInfo'
        dxfFile:
          type: string
          x-mimetype: application/dxf
          description: The builing plan drawing file, in .dxf format, which needs to be scrutinized.
      example:
        tenantId: sonpur
        transactionNumber: '1'
        requestInfo: {}
        dxfFile: ''
      required:
        - tenantId
        - dxfFile          
            
    ExtractPlanResponse:
      description: This object contains the response of a file scrutiny along with all the reports and status. 
      properties:
        responseInfo:
          $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ResponseInfo'
        planDetail:
          type: string
          description: Data extracted from drawing in json
